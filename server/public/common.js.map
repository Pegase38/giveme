{"version":3,"sources":["webpack:///./src/app/core/auth/guards/is-user-signed-in-guard.guard.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAA2C;AAOlB;AAEY;AAEwB;AACD;AAK5D;IACE,kCACU,OAAuB,EACvB,MAAc,EACd,MAAqB;QAFrB,YAAO,GAAP,OAAO,CAAgB;QACvB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;IAC5B,CAAC;IAEJ,8CAAW,GAAX,UACE,KAA6B,EAC7B,KAA0B;QAF5B,iBAeC;QAPC,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,IAAI,CACnC,0DAAG,CAAC,oBAAU;YACZ,IAAI,UAAU,KAAK,IAAI,EAAE;gBACvB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAI,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC;aACnD;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAtBU,wBAAwB;QAHpC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAGmB,wEAAc;YACf,sDAAM;YACN,oEAAa;OAJpB,wBAAwB,CAuBpC;IAAD,+BAAC;CAAA;AAvBoC","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n  CanActivate,\r\n  Router,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { SessionService } from '../services/session.service';\r\nimport { ConfigService } from '../../config/config.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IsUserSignedInGuardGuard implements CanActivate {\r\n  constructor(\r\n    private session: SessionService,\r\n    private router: Router,\r\n    private config: ConfigService\r\n  ) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | boolean\r\n    | UrlTree\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree> {\r\n    return this.session.isSignedIn().pipe(\r\n      tap(isSignedIn => {\r\n        if (isSignedIn !== true) {\r\n          this.router.navigate(this.config.getLoginRoute());\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}