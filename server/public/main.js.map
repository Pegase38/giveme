{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/auth/guards/is-user-signed-in-guard.guard.ts","webpack:///./src/app/core/auth/guards/is-user-unknown.guard.ts","webpack:///./src/app/core/auth/interceptors/auth.interceptor.ts","webpack:///./src/app/core/auth/services/auth.service.ts","webpack:///./src/app/core/auth/services/session.service.ts","webpack:///./src/app/core/config/config.service.ts","webpack:///./src/app/core/logger/interceptors/logger.interceptor.ts","webpack:///./src/app/core/logger/services/logger.service.ts","webpack:///./src/app/login/containers/login/login.component.html","webpack:///./src/app/login/containers/login/login.component.scss","webpack:///./src/app/login/containers/login/login.component.ts","webpack:///./src/app/login/login-routing.module.ts","webpack:///./src/app/login/login.module.ts","webpack:///./src/app/shared/models/auth/credential.ts","webpack:///./src/app/shared/models/auth/session-state.ts","webpack:///./src/app/shared/models/auth/user.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/user-interface/components/footer/footer.component.html","webpack:///./src/app/user-interface/components/footer/footer.component.scss","webpack:///./src/app/user-interface/components/footer/footer.component.ts","webpack:///./src/app/user-interface/components/header/header.component.html","webpack:///./src/app/user-interface/components/header/header.component.scss","webpack:///./src/app/user-interface/components/header/header.component.ts","webpack:///./src/app/user-interface/components/nav/nav.component.html","webpack:///./src/app/user-interface/components/nav/nav.component.scss","webpack:///./src/app/user-interface/components/nav/nav.component.ts","webpack:///./src/app/user-interface/containers/user-interface/user-interface.component.html","webpack:///./src/app/user-interface/containers/user-interface/user-interface.component.scss","webpack:///./src/app/user-interface/containers/user-interface/user-interface.component.ts","webpack:///./src/app/user-interface/user-interface.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./account/account.module\": [\n\t\t\"./src/app/account/account.module.ts\",\n\t\t\"account-account-module\"\n\t],\n\t\"./annonces/annonces.module\": [\n\t\t\"./src/app/annonces/annonces.module.ts\",\n\t\t\"annonces-annonces-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IsUserSignedInGuardGuard } from './core/auth/guards/is-user-signed-in-guard.guard';\n\nconst routes: Routes = [\n  {\n    path: 'annonces',\n    canActivate: [IsUserSignedInGuardGuard],\n    loadChildren: './annonces/annonces.module#AnnoncesModule',\n  },\n  {\n    path: 'account',\n    loadChildren: './account/account.module#AccountModule',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","module.exports = \"<app-user-interface></app-user-interface>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'giveme';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { APP_BASE_HREF } from '@angular/common';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { LoginModule } from './login/login.module';\nimport { UserInterfaceModule } from './user-interface/user-interface.module';\nimport { AppComponent } from './app.component';\nimport { AuthInterceptor } from './core/auth/interceptors/auth.interceptor';\nimport { LoggerInterceptor } from './core/logger/interceptors/logger.interceptor';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    UserInterfaceModule,\n    LoginModule,\n  ],\n  providers: [\n    { provide: APP_BASE_HREF, useValue: '/app/' },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LoggerInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n  CanActivate,\r\n  Router,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { SessionService } from '../services/session.service';\r\nimport { ConfigService } from '../../config/config.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IsUserSignedInGuardGuard implements CanActivate {\r\n  constructor(\r\n    private session: SessionService,\r\n    private router: Router,\r\n    private config: ConfigService\r\n  ) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | boolean\r\n    | UrlTree\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree> {\r\n    return this.session.isSignedIn().pipe(\r\n      tap(isSignedIn => {\r\n        if (isSignedIn !== true) {\r\n          this.router.navigate(this.config.getLoginRoute());\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n  Router,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { tap, map } from 'rxjs/operators';\r\n\r\nimport { SessionService } from '../services/session.service';\r\nimport { ConfigService } from '../../config/config.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IsUserUnknownGuard implements CanActivate {\r\n  constructor(\r\n    private session: SessionService,\r\n    private router: Router,\r\n    private config: ConfigService\r\n  ) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    return this.session.isSignedIn().pipe(\r\n      tap(isSignedIn => {\r\n        if (isSignedIn !== false) {\r\n          this.router.navigate(this.config.getPostLoginDefaultRoute());\r\n        }\r\n      }),\r\n      map(isSignedIn => !isSignedIn)\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { Observable, config } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { AuthService } from '../services/auth.service';\r\nimport { LoggerService } from '../../logger/services/logger.service';\r\nimport { SessionService } from '../services/session.service';\r\nimport { Router } from '@angular/router';\r\nimport { ConfigService } from '../../config/config.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private auth: AuthService,\r\n    private session: SessionService,\r\n    private logger: LoggerService,\r\n    private router: Router,\r\n    private config: ConfigService\r\n  ) {}\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const authToken = this.auth.getAuthorizationToken();\r\n    this.logger.info('authToken:' + authToken);\r\n    const authReq = req.clone({\r\n      headers: req.headers.set('Authorization', authToken),\r\n    });\r\n\r\n    return next.handle(authReq).pipe(\r\n      tap(\r\n        () => {},\r\n        err => {\r\n          if (err.status === 401) {\r\n            this.logger.error('Need to be logged!');\r\n            this.session.markTokenExpired();\r\n            this.router.navigate(this.config.getLoginRoute());\r\n          } else if (err.status === 403) {\r\n            this.logger.error('Not authorized!');\r\n          } else if (err.status === 404) {\r\n            this.logger.error('Not found!');\r\n          } else {\r\n            this.logger.error('Error!');\r\n          }\r\n        }\r\n      )\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { map, tap, switchMap, finalize, first } from 'rxjs/operators';\r\n\r\nimport { SessionService } from './session.service';\r\nimport { ConfigService } from '../../config/config.service';\r\nimport { Credential } from 'src/app/shared/models/auth/credential';\r\nimport { SessionState } from 'src/app/shared/models/auth/session-state';\r\nimport { AuthResponse } from 'src/app/shared/models/auth/auth-response';\r\nimport { UserResponse } from 'src/app/shared/models/auth/user-response';\r\nimport { User } from 'src/app/shared/models/auth/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  tokenKey = 'Bearer';\r\n  authorizationToken: string;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private session: SessionService,\r\n    private config: ConfigService\r\n  ) {\r\n    this.session.getToken().subscribe(token => {\r\n      this.authorizationToken = token;\r\n    });\r\n  }\r\n\r\n  signIn(credential: Credential) {\r\n    return this.http\r\n      .post<AuthResponse>(`${this.getResourceBaseUrl()}/login`, credential)\r\n      .pipe(\r\n        tap(authResponse =>\r\n          this.session.updateState(\r\n            new SessionState({\r\n              token: authResponse.token,\r\n            })\r\n          )\r\n        ),\r\n        switchMap(() =>\r\n          this.http.get<UserResponse>(`${this.getResourceBaseUrl()}/me`)\r\n        ),\r\n        map(userResponse => this.session.updateUser(new User(userResponse))),\r\n        map(() => undefined)\r\n      );\r\n  }\r\n\r\n  /*signOut() {\r\n    this.session.state$\r\n      .pipe(\r\n        first(),\r\n        map(state => state.tokenId),\r\n        switchMap(tokenId =>\r\n          this.http.delete(\r\n            `${this.getResourceBaseUrl()}/${encodeURIComponent(tokenId)}`\r\n          )\r\n        ),\r\n        finalize(() => this.session.updateState(new SessionState()))\r\n      )\r\n      .subscribe();\r\n  }*/\r\n\r\n  getAuthorizationToken(): string {\r\n    return `${this.tokenKey} ${encodeURIComponent(this.authorizationToken)}`;\r\n  }\r\n\r\n  private getResourceBaseUrl() {\r\n    return `${this.config.getApiBaseUrl()}users`;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { filter, map, distinctUntilChanged, skip } from 'rxjs/operators';\r\n\r\nimport { SessionState } from 'src/app/shared/models/auth/session-state';\r\nimport { User } from 'src/app/shared/models/auth/user';\r\n\r\n/**\r\n * Gère la session dans le local storage.\r\n * Propose un API pour modifier la session et récupérer les informations de sessions.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SessionService {\r\n  localStorageKey = 'sessionState';\r\n  sessionState$: BehaviorSubject<SessionState>;\r\n\r\n  constructor() {\r\n    this.sessionState$ = new BehaviorSubject<SessionState>(null);\r\n\r\n    this._initializeState();\r\n\r\n    window.addEventListener('storage', event => {\r\n      /* Not concerned here. */\r\n      if (event.key !== this.localStorageKey) {\r\n        return;\r\n      }\r\n\r\n      this._initializeState();\r\n    });\r\n  }\r\n\r\n  get state$(): Observable<SessionState> {\r\n    return this.sessionState$.pipe(filter(state => state !== null));\r\n  }\r\n\r\n  getToken(): Observable<string> {\r\n    return this.state$.pipe(map(state => state.token));\r\n  }\r\n\r\n  getUser(): Observable<User> {\r\n    return this.state$.pipe(map(state => state.user));\r\n  }\r\n\r\n  isSignedIn(): Observable<boolean> {\r\n    return this.state$.pipe(map(state => state.isSignedIn()));\r\n  }\r\n\r\n  onSignin(): Observable<SessionState> {\r\n    return this._onIsSignedInChange().pipe(filter(state => state.isSignedIn()));\r\n  }\r\n\r\n  onSignout(): Observable<SessionState> {\r\n    return this._onIsSignedInChange().pipe(\r\n      filter(state => !state.isSignedIn())\r\n    );\r\n  }\r\n\r\n  markTokenExpired() {\r\n    this.updateState(new SessionState());\r\n  }\r\n\r\n  updateState(stateData: SessionState) {\r\n    const state = Object.assign(\r\n      new SessionState(),\r\n      this.sessionState$.getValue(),\r\n      stateData\r\n    );\r\n\r\n    this.sessionState$.next(state);\r\n    this._saveState(state);\r\n  }\r\n\r\n  updateUser(userData: User) {\r\n    console.log(userData);\r\n    const state = Object.assign(\r\n      new SessionState(),\r\n      this.sessionState$.getValue(),\r\n      { user: userData }\r\n    );\r\n\r\n    this.sessionState$.next(state);\r\n    this._saveState(state);\r\n  }\r\n\r\n  private _initializeState() {\r\n    this.sessionState$.next(this._loadState() || new SessionState());\r\n  }\r\n\r\n  private _saveState(state: SessionState) {\r\n    localStorage.setItem(this.localStorageKey, JSON.stringify(state));\r\n  }\r\n\r\n  private _loadState(): SessionState {\r\n    const stateString = localStorage.getItem(this.localStorageKey);\r\n\r\n    if (stateString == null) {\r\n      return null;\r\n    }\r\n\r\n    return new SessionState(JSON.parse(stateString));\r\n  }\r\n\r\n  private _onIsSignedInChange(): Observable<SessionState> {\r\n    return this.state$.pipe(\r\n      distinctUntilChanged(\r\n        (previous, next) => previous.isSignedIn() === next.isSignedIn()\r\n      ),\r\n      /* Skip the current behaviour subject value and wait for a change. */\r\n      skip(1)\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ConfigService {\r\n  private API_PROTOCOL = environment.apiProtocol;\r\n  private API_HOST = environment.apiHost;\r\n  private API_PORT = environment.apiPort;\r\n  private API_BASE_PATH = environment.apiBasePath;\r\n\r\n  getApiBaseUrl() {\r\n    return `${this.API_PROTOCOL}://${this.API_HOST}:${this.API_PORT}/${\r\n      this.API_BASE_PATH\r\n    }`;\r\n  }\r\n\r\n  getLoginRoute() {\r\n    return ['login'];\r\n  }\r\n\r\n  getPostLoginDefaultRoute() {\r\n    return ['annonces'];\r\n  }\r\n\r\n  getPostLogoutDefaultRoute() {\r\n    return ['/'];\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest,\r\n  HttpResponse,\r\n} from '@angular/common/http';\r\nimport { tap, finalize } from 'rxjs/operators';\r\n\r\nimport { LoggerService } from '../services/logger.service';\r\n\r\n@Injectable()\r\nexport class LoggerInterceptor implements HttpInterceptor {\r\n  constructor(private logger: LoggerService) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    const started = Date.now();\r\n    let ok: string;\r\n\r\n    // extend server response observable with logging\r\n    return next.handle(req).pipe(\r\n      tap(\r\n        // Succeeds when there is a response; ignore other events\r\n        event => (ok = event instanceof HttpResponse ? 'succeeded' : ''),\r\n        // Operation failed; error is an HttpErrorResponse\r\n        error => (ok = 'failed')\r\n      ),\r\n      // Log when response observable either completes or errors\r\n      finalize(() => {\r\n        const elapsed = Date.now() - started;\r\n        const msg = `${req.method} \"${\r\n          req.urlWithParams\r\n        }\" ${ok} in ${elapsed} ms.`;\r\n        this.logger.info(msg);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n/**\r\n * Service de log.\r\n * En production, on fera également un call à l'api de log.\r\n * En dev, on fera seulement un log dans console.log.\r\n * TODO : ajouter un mecanisme de log serveur pour la production\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LoggerService {\r\n  constructor() {}\r\n\r\n  /**\r\n   * Log une information : message. En production, appelle un service de loggin\r\n   *\r\n   * @param message le message à logger\r\n   */\r\n  info(message: string) {\r\n    if (!environment.production) {\r\n      console.log(this.formatMessage(message));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Log un message d'erreur : message. En production, appelle un service de loggin\r\n   *\r\n   * @param message le message à logger\r\n   */\r\n  error(message: string) {\r\n    if (!environment.production) {\r\n      console.error(this.formatMessage(message));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Ajoute la date au message\r\n   *\r\n   * @param message le message à formater\r\n   */\r\n  private formatMessage(message: string): string {\r\n    return new Date() + ' : ' + message;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"login-wrapper\\\">\\n  <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onLogin()\\\" class=\\\"login\\\">\\n    <section class=\\\"title\\\">\\n      <h3 class=\\\"welcome\\\">Login page</h3>\\n    </section>\\n    <div class=\\\"login-group\\\">\\n      <clr-input-container>\\n        <input\\n          type=\\\"text\\\"\\n          name=\\\"email\\\"\\n          formControlName=\\\"email\\\"\\n          clrInput\\n          placeholder=\\\"Email\\\"\\n        />\\n      </clr-input-container>\\n      <clr-password-container>\\n        <input\\n          type=\\\"password\\\"\\n          name=\\\"password\\\"\\n          formControlName=\\\"password\\\"\\n          clrPassword\\n          placeholder=\\\"Password\\\"\\n        />\\n      </clr-password-container>\\n      <div class=\\\"error active\\\">\\n        Invalid user name or password\\n      </div>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Login</button>\\n    </div>\\n  </form>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2NvbnRhaW5lcnMvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MifQ== */\"","import { LoggerService } from './../../../core/logger/services/logger.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\n\nimport { AuthService } from 'src/app/core/auth/services/auth.service';\nimport { ConfigService } from 'src/app/core/config/config.service';\nimport { Credential } from 'src/app/shared/models/auth/credential';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  destroy$: Subject<boolean> = new Subject<boolean>();\n  loginForm: FormGroup;\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private config: ConfigService,\n    private logger: LoggerService\n  ) {\n    this.loginForm = new FormGroup({\n      email: new FormControl(),\n      password: new FormControl(),\n    });\n  }\n\n  ngOnInit() {}\n\n  onLogin() {\n    this.auth\n      .signIn(new Credential(this.loginForm.value))\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        () => {\n          this.logger.info('Login success!');\n          this.router.navigate(this.config.getPostLoginDefaultRoute());\n        },\n        err =>\n          /*this.messageService.add({ severity: 'error', summary: 'Login error' }*/\n          this.logger.error(err)\n      );\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './containers/login/login.component';\nimport { IsUserUnknownGuard } from '../core/auth/guards/is-user-unknown.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full',\n  },\n  {\n    path: 'login',\n    canActivate: [IsUserUnknownGuard],\n    component: LoginComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginRoutingModule {}\n","import { LoginRoutingModule } from './login-routing.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './containers/login/login.component';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    SharedModule\n  ]\n})\nexport class LoginModule { }\n","export class Credential {\r\n  email: string;\r\n  password: string;\r\n\r\n  constructor(fields?: Partial<Credential>) {\r\n    if (fields) {\r\n      Object.assign(this, fields);\r\n    }\r\n  }\r\n}\r\n","import { User } from './user';\r\n\r\nexport class SessionState {\r\n  token?: string;\r\n  user?: User;\r\n\r\n  constructor(args: Partial<SessionState> = {}) {\r\n    this.token = args.token;\r\n    this.user = args.user;\r\n  }\r\n\r\n  isSignedIn() {\r\n    return this.token != null;\r\n  }\r\n}\r\n","export class User {\r\n  id: number;\r\n  username: string;\r\n  email: string;\r\n\r\n  constructor(args: Partial<User> = {}) {\r\n    this.id = args.id;\r\n    this.username = args.username;\r\n    this.email = args.email;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ClarityModule } from '@clr/angular';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, ReactiveFormsModule, ClarityModule],\n  exports: [CommonModule, ReactiveFormsModule, ClarityModule],\n})\nexport class SharedModule {}\n","module.exports = \"<p>\\n  footer works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItaW50ZXJmYWNlL2NvbXBvbmVudHMvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<header class=\\\"header-3\\\">\\n  <div class=\\\"branding\\\">\\n    <a class=\\\"nav-link\\\">\\n      <clr-icon shape=\\\"shield\\\"></clr-icon>\\n      <span class=\\\"title\\\">{{ title }}</span>\\n    </a>\\n  </div>\\n  <div class=\\\"header-nav\\\">\\n    <a [routerLink]=\\\"['/']\\\" routerLinkActive=\\\"active\\\" class=\\\"nav-link nav-icon\\\"\\n      ><clr-icon shape=\\\"home\\\"></clr-icon\\n    ></a>\\n  </div>\\n  <div *ngIf=\\\"isSignedIn\\\" class=\\\"header-actions\\\">\\n    <clr-dropdown class=\\\"dropdown bottom-right\\\">\\n      <button class=\\\"nav-icon\\\" clrDropdownToggle>\\n        <clr-icon shape=\\\"user\\\"></clr-icon>\\n        <clr-icon shape=\\\"caret down\\\"></clr-icon>\\n      </button>\\n      <div class=\\\"dropdown-menu\\\">\\n        <a\\n          [routerLink]=\\\"['account/profile']\\\"\\n          routerLinkActive=\\\"active\\\"\\n          clrDropdownItem\\n          >Profile</a\\n        >\\n        <a (click)=\\\"onLogout()\\\" clrDropdownItem>Logout</a>\\n      </div>\\n    </clr-dropdown>\\n  </div>\\n</header>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItaW50ZXJmYWNlL2NvbXBvbmVudHMvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit {\n  title = 'GiveMe';\n  @Input() isSignedIn: boolean;\n  @Output() logout: EventEmitter<Event> = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  onLogout() {\n    this.logout.emit();\n  }\n}\n","module.exports = \"<nav class=\\\"sidenav\\\">\\n  <section class=\\\"sidenav-content\\\">\\n    <a\\n      [routerLink]=\\\"['/annonces', 'offres']\\\"\\n      routerLinkActive=\\\"active\\\"\\n      class=\\\"nav-link\\\"\\n      >Offres</a\\n    >\\n    <a\\n      [routerLink]=\\\"['/annonces', 'newAnnonce']\\\"\\n      routerLinkActive=\\\"active\\\"\\n      class=\\\"nav-link\\\"\\n      >Déposer une annonce</a\\n    >\\n  </section>\\n</nav>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItaW50ZXJmYWNlL2NvbXBvbmVudHMvbmF2L25hdi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss'],\n})\nexport class NavComponent {\n\n  constructor() {}\n\n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n  <app-header\\n    [isSignedIn]=\\\"isSignedIn$ | async\\\"\\n    (logout)=\\\"onLogout()\\\"\\n  ></app-header>\\n  <div class=\\\"content-container\\\">\\n    <div class=\\\"content-area\\\">\\n      <router-outlet></router-outlet>\\n      <app-footer></app-footer>\\n    </div>\\n    <app-nav class=\\\"sidenav\\\"></app-nav>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItaW50ZXJmYWNlL2NvbnRhaW5lcnMvdXNlci1pbnRlcmZhY2UvdXNlci1pbnRlcmZhY2UuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { SessionService } from 'src/app/core/auth/services/session.service';\nimport { ConfigService } from 'src/app/core/config/config.service';\n\n@Component({\n  selector: 'app-user-interface',\n  templateUrl: './user-interface.component.html',\n  styleUrls: ['./user-interface.component.scss'],\n})\nexport class UserInterfaceComponent implements OnInit, OnDestroy {\n  isSignedIn$: Observable<boolean>;\n\n  constructor(\n    private session: SessionService,\n    private router: Router,\n    private config: ConfigService\n  ) {}\n\n  ngOnInit() {\n    this.isSignedIn$ = this.session.isSignedIn();\n  }\n\n  onLogout() {\n    this.session.markTokenExpired();\n    this.router.navigate(this.config.getPostLogoutDefaultRoute());\n  }\n\n  ngOnDestroy(): void {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserInterfaceComponent } from './containers/user-interface/user-interface.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { NavComponent } from './components/nav/nav.component';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [UserInterfaceComponent, HeaderComponent, FooterComponent, NavComponent],\n  imports: [\n    CommonModule,\n    RouterModule,\n    SharedModule\n  ],\n  exports: [UserInterfaceComponent]\n})\nexport class UserInterfaceModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiProtocol: 'http',\n  apiHost: 'localhost',\n  apiPort: '3000',\n  apiBasePath: '',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}