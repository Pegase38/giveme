{"version":3,"sources":["webpack:///./src/app/account/account-routing.module.ts","webpack:///./src/app/account/account.module.ts","webpack:///./src/app/account/containers/change-password/change-password.component.html","webpack:///./src/app/account/containers/change-password/change-password.component.scss","webpack:///./src/app/account/containers/change-password/change-password.component.ts","webpack:///./src/app/account/containers/edit-profile/edit-profile.component.html","webpack:///./src/app/account/containers/edit-profile/edit-profile.component.scss","webpack:///./src/app/account/containers/edit-profile/edit-profile.component.ts","webpack:///./src/app/account/containers/profile/profile.component.html","webpack:///./src/app/account/containers/profile/profile.component.scss","webpack:///./src/app/account/containers/profile/profile.component.ts","webpack:///./src/app/account/containers/register/register.component.html","webpack:///./src/app/account/containers/register/register.component.scss","webpack:///./src/app/account/containers/register/register.component.ts","webpack:///./src/app/account/services/users.service.ts","webpack:///./src/app/shared/validators/match.validator.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEwB;AACc;AACnB;AACG;AACW;AACS;AAEjG,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,SAAS;QACrB,SAAS,EAAE,MAAM;KAClB;IACD;QACE,IAAI,EAAE,UAAU;QAChB,WAAW,EAAE,CAAC,0FAAkB,CAAC;QACjC,SAAS,EAAE,yFAAiB;KAC7B;IACD;QACE,IAAI,EAAE,SAAS;QACf,WAAW,EAAE,CAAC,wGAAwB,CAAC;QACvC,SAAS,EAAE,sFAAgB;KAC5B;IACD;QACE,IAAI,EAAE,cAAc;QACpB,WAAW,EAAE,CAAC,wGAAwB,CAAC;QACvC,SAAS,EAAE,oGAAoB;KAChC;IACD;QACE,IAAI,EAAE,iBAAiB;QACvB,WAAW,EAAE,CAAC,wGAAwB,CAAC;QACvC,SAAS,EAAE,6GAAuB;KACnC;CACF,CAAC;AAMF;IAAA;IAAmC,CAAC;IAAvB,oBAAoB;QAJhC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,oBAAoB,CAAG;IAAD,2BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CQ;AAEuB;AACT;AAEsB;AACH;AACc;AACS;AAWjG;IAAA;IAA4B,CAAC;IAAhB,aAAa;QATzB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,yFAAiB;gBACjB,sFAAgB;gBAChB,oGAAoB;gBACpB,6GAAuB;aACxB;YACD,OAAO,EAAE,CAAC,kEAAY,EAAE,4EAAoB,CAAC;SAC9C,CAAC;OACW,aAAa,CAAG;IAAD,oBAAC;CAAA;AAAH;;;;;;;;;;;;ACnB1B,yuD;;;;;;;;;;;ACAA,+DAA+D,+L;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAF;AAMrC;AACiB;AACV;AACY;AAEiB;AACiB;AAEF;AAO3E;IAKE,iCACU,EAAe,EACf,OAAuB,EACvB,MAAc,EACd,WAAyB;QAHzB,OAAE,GAAF,EAAE,CAAa;QACf,YAAO,GAAP,OAAO,CAAgB;QACvB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAc;QARnC,aAAQ,GAAqB,IAAI,4CAAO,EAAW,CAAC;IASjD,CAAC;IAEJ,0CAAQ,GAAR;QAAA,iBAiBC;QAhBC,IAAI,CAAC,OAAO;aACT,OAAO,EAAE;aACT,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS,CAAC,cAAI;YACb,KAAI,CAAC,kBAAkB,GAAG,KAAI,CAAC,EAAE,CAAC,KAAK,CACrC;gBACE,EAAE,EAAE,IAAI,CAAC,EAAE;gBACX,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjE,iBAAiB,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;aAC/C,EACD;gBACE,SAAS,EAAE,gGAAc,CAAC,aAAa,EAAE,mBAAmB,CAAC;aAC9D,CACF,CAAC;YACF,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kDAAgB,GAAhB;QAAA,iBAMC;QALC,IAAI,CAAC,WAAW;aACb,kBAAkB,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;aACjD,SAAS,CAAC;YACT,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,0CAAQ,GAAR;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,6CAAW,GAAX;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;IAC9B,CAAC;IA9CU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,oJAA+C;;SAEhD,CAAC;yCAOc,0DAAW;YACN,kFAAc;YACf,sDAAM;YACD,oEAAY;OATxB,uBAAuB,CA+CnC;IAAD,8BAAC;CAAA;AA/CmC;;;;;;;;;;;;ACrBpC,y/C;;;;;;;;;;;ACAA,sCAAsC,iBAAiB,EAAE,+CAA+C,uf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1C;AACM;AACP;AAC9B;AAG6C;AACtB;AACb;AAOzC;IAKE,8BACU,OAAuB,EACvB,MAAc,EACd,WAAyB;QAFzB,YAAO,GAAP,OAAO,CAAgB;QACvB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAc;QAPnC,aAAQ,GAAqB,IAAI,4CAAO,EAAW,CAAC;IAQjD,CAAC;IAEJ,uCAAQ,GAAR;QAAA,iBAeC;QAdC,IAAI,CAAC,OAAO;aACT,OAAO,EAAE;aACT,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS,CAAC,cAAI;YACb,KAAI,CAAC,eAAe,GAAG,IAAI,wDAAS,CAAC;gBACnC,EAAE,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,EAAE,CAAC;gBAC5B,KAAK,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,KAAK,EAAE;oBACjC,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,KAAK;iBACjB,CAAC;gBACF,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;aAChE,CAAC,CAAC;YACH,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,4CAAa,GAAb;QAAA,iBAMC;QALC,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE;YAC9B,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;gBAChE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,uCAAQ,GAAR;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,0CAAW,GAAX;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;IAC9B,CAAC;IA3CU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,2IAA4C;;SAE7C,CAAC;yCAOmB,yFAAc;YACf,sDAAM;YACD,oEAAY;OARxB,oBAAoB,CA4ChC;IAAD,2BAAC;CAAA;AA5CgC;;;;;;;;;;;;ACfjC,oiBAAoiB,iBAAiB,6HAA6H,cAAc,uc;;;;;;;;;;;ACAhsB,+DAA+D,2K;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AAG0B;AAQ5E;IAEE,0BAAoB,OAAuB;QAAvB,YAAO,GAAP,OAAO,CAAgB;IAAG,CAAC;IAE/C,mCAAQ,GAAR;QACE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IACtC,CAAC;IANU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,4HAAuC;;SAExC,CAAC;yCAG6B,yFAAc;OAFhC,gBAAgB,CAO5B;IAAD,uBAAC;CAAA;AAP4B;;;;;;;;;;;;ACX7B,6wE;;;;;;;;;;;ACAA,+DAA+D,2K;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AAM1B;AAEoC;AACgB;AACD;AAO3E;IAEE,2BACU,EAAe,EACf,WAAyB,EACzB,MAAqB;QAFrB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAc;QACzB,WAAM,GAAN,MAAM,CAAe;IAC5B,CAAC;IAEJ,oCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE;YACzB,IAAI,CAAC,WAAW;iBACb,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;iBAC/B,SAAS,CAAC,cAAO,CAAC,EAAE,aAAG,IAAI,YAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAtC,CAAsC,CAAC,CAAC;SACvE;IACH,CAAC;IAED,+DAA+D;IACvD,sCAAU,GAAlB;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAC7B;YACE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACpD,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9D,iBAAiB,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SAC/C,EACD;YACE,SAAS,EAAE,gGAAc,CAAC,UAAU,EAAE,mBAAmB,CAAC;SAC3D,CACF,CAAC;IACJ,CAAC;IAjCU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,+HAAwC;;SAEzC,CAAC;yCAIc,0DAAW;YACF,oEAAY;YACjB,yFAAa;OALpB,iBAAiB,CAkC7B;IAAD,wBAAC;CAAA;AAlC6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBoB;AACP;AACF;AACY;AAEiB;AACH;AACS;AACA;AAErB;AAEY;AAKnE;IACE,sBACU,IAAgB,EAChB,OAAuB,EACvB,IAAiB,EACjB,MAAqB,EACrB,MAAqB,EACrB,MAAc;QALd,SAAI,GAAJ,IAAI,CAAY;QAChB,YAAO,GAAP,OAAO,CAAgB;QACvB,SAAI,GAAJ,IAAI,CAAa;QACjB,WAAM,GAAN,MAAM,CAAe;QACrB,WAAM,GAAN,MAAM,CAAe;QACrB,WAAM,GAAN,MAAM,CAAQ;IACrB,CAAC;IAEJ;;OAEG;IACH,iCAAU,GAAV,UAAW,IAAU;QAArB,iBAWC;QAVC,IAAI,IAAI,EAAE;YACR,OAAO,IAAI,CAAC,IAAI;iBACb,KAAK,CAAI,IAAI,CAAC,kBAAkB,EAAE,SAAI,IAAI,CAAC,EAAI,EAAE,IAAI,CAAC;iBACtD,IAAI,CACH,gEAAS,CAAC;gBACR,YAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,KAAI,CAAC,kBAAkB,EAAE,QAAK,CAAC;YAA9D,CAA8D,CAC/D,EACD,0DAAG,CAAC,sBAAY,IAAI,YAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,oEAAI,CAAC,YAAY,CAAC,CAAC,EAA/C,CAA+C,CAAC,CACrE,CAAC;SACL;IACH,CAAC;IAED;;;;OAIG;IACH,yCAAkB,GAAlB,UAAmB,IAIlB;QAJD,iBAkBC;QAbC,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,CAAC,iBAAiB,EAAE;YAC/C,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;SAC1C;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,IAAI,CAAC,kBAAkB,EAAE,QAAK,CAAC,CAAC,IAAI,CACxE,0DAAG,CAAC,cAAI;YACN,IAAM,OAAO,GAAG,IAAI,oEAAI,CAAC,IAAI,CAAC,CAAC;YAC/B,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC;YACpC,OAAO,OAAO,CAAC;QACjB,CAAC,CAAC,EACF,gEAAS,CAAC,cAAI;YACZ,YAAI,CAAC,IAAI,CAAC,KAAK,CAAI,KAAI,CAAC,kBAAkB,EAAE,SAAI,IAAI,CAAC,EAAI,EAAE,IAAI,CAAC;QAAhE,CAAgE,CACjE,CACF,CAAC;IACJ,CAAC;IAED;;;OAGG;IACH,+BAAQ,GAAR,UAAS,IAAU;QAAnB,iBAcC;QAbC,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,iBAAiB,EAAE;YAC5C,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;SAC1C;QACD,OAAO,IAAI,CAAC,iBAAiB,CAAC;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,IAAI,CAAC,CAAC,IAAI,CACzD,gEAAS,CAAC;YACR,YAAI,CAAC,IAAI,CAAC,MAAM,CACd,IAAI,gFAAU,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAC/D;QAFD,CAEC,CACF,EACD,0DAAG,CAAC,cAAM,YAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6BAA6B,CAAC,EAA/C,CAA+C,CAAC,EAC1D,0DAAG,CAAC,cAAM,YAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAI,CAAC,MAAM,CAAC,wBAAwB,EAAE,CAAC,EAA5D,CAA4D,CAAC,CACxE,CAAC;IACJ,CAAC;IAEO,yCAAkB,GAA1B;QACE,OAAU,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,UAAO,CAAC;IAC/C,CAAC;IAzEU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAGgB,+DAAU;YACP,yFAAc;YACjB,4EAAW;YACT,gFAAa;YACb,yFAAa;YACb,sDAAM;OAPb,YAAY,CA0ExB;IAAD,mBAAC;CAAA;AA1EwB;;;;;;;;;;;;;ACfzB;AAAA;AAAO,SAAS,cAAc,CAC5B,WAAmB,EACnB,mBAA2B;IAE3B,OAAO,UAAC,SAAoB;QAC1B,IAAM,OAAO,GAAG,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAChD,IAAM,eAAe,GAAG,SAAS,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;QAEhE,IAAI,eAAe,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,EAAE;YAC3D,gFAAgF;YAChF,OAAO;SACR;QAED,mDAAmD;QACnD,IAAI,OAAO,CAAC,KAAK,KAAK,eAAe,CAAC,KAAK,EAAE;YAC3C,eAAe,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;SAC5C;aAAM;YACL,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SACjC;IACH,CAAC,CAAC;AACJ,CAAC","file":"account-account-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IsUserUnknownGuard } from '../core/auth/guards/is-user-unknown.guard';\r\nimport { IsUserSignedInGuardGuard } from '../core/auth/guards/is-user-signed-in-guard.guard';\r\nimport { ProfileComponent } from './containers/profile/profile.component';\r\nimport { RegisterComponent } from './containers/register/register.component';\r\nimport { EditProfileComponent } from './containers/edit-profile/edit-profile.component';\r\nimport { ChangePasswordComponent } from './containers/change-password/change-password.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'profile',\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: 'register',\r\n    canActivate: [IsUserUnknownGuard],\r\n    component: RegisterComponent,\r\n  },\r\n  {\r\n    path: 'profile',\r\n    canActivate: [IsUserSignedInGuardGuard],\r\n    component: ProfileComponent,\r\n  },\r\n  {\r\n    path: 'edit-profile',\r\n    canActivate: [IsUserSignedInGuardGuard],\r\n    component: EditProfileComponent,\r\n  },\r\n  {\r\n    path: 'change-password',\r\n    canActivate: [IsUserSignedInGuardGuard],\r\n    component: ChangePasswordComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AccountRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { AccountRoutingModule } from './account-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\nimport { RegisterComponent } from './containers/register/register.component';\r\nimport { ProfileComponent } from './containers/profile/profile.component';\r\nimport { EditProfileComponent } from './containers/edit-profile/edit-profile.component';\r\nimport { ChangePasswordComponent } from './containers/change-password/change-password.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RegisterComponent,\r\n    ProfileComponent,\r\n    EditProfileComponent,\r\n    ChangePasswordComponent,\r\n  ],\r\n  imports: [SharedModule, AccountRoutingModule],\r\n})\r\nexport class AccountModule {}\r\n","module.exports = \"<div class=\\\"clr-row\\\">\\r\\n  <div class=\\\"clr-col-12\\\"><h1>Change password</h1></div>\\r\\n</div>\\r\\n<ng-container *ngIf=\\\"user\\\">\\r\\n  <form\\r\\n    [formGroup]=\\\"changePasswordForm\\\"\\r\\n    (ngSubmit)=\\\"onChangePassword()\\\"\\r\\n    clrForm\\r\\n  >\\r\\n    <input clrInput type=\\\"hidden\\\" formControlName=\\\"id\\\" name=\\\"id\\\" id=\\\"id\\\" />\\r\\n    <clr-password-container>\\r\\n      <label>New password</label>\\r\\n      <input\\r\\n        clrPassword\\r\\n        type=\\\"text\\\"\\r\\n        formControlName=\\\"newPassword\\\"\\r\\n        name=\\\"newPassword\\\"\\r\\n        id=\\\"newPassword\\\"\\r\\n      />\\r\\n      <clr-control-error>\\r\\n        <div *clrIfError=\\\"'required'\\\">\\r\\n          Password is required.\\r\\n        </div>\\r\\n        <div *clrIfError=\\\"'minlength'\\\">\\r\\n          Password must be at least 8 characters long.\\r\\n        </div></clr-control-error\\r\\n      >\\r\\n    </clr-password-container>\\r\\n    <clr-password-container>\\r\\n      <label>Confirm password</label>\\r\\n      <input\\r\\n        clrPassword\\r\\n        type=\\\"text\\\"\\r\\n        formControlName=\\\"confirmedPassword\\\"\\r\\n        name=\\\"confirmedPassword\\\"\\r\\n        id=\\\"confirmedPassword\\\"\\r\\n      />\\r\\n      <clr-control-error>\\r\\n        <div *clrIfError=\\\"'required'\\\">\\r\\n          Confirmed password is required.\\r\\n        </div>\\r\\n        <div *clrIfError=\\\"'match'\\\">\\r\\n          Passwords must match.\\r\\n        </div></clr-control-error\\r\\n      >\\r\\n    </clr-password-container>\\r\\n    <button\\r\\n      class=\\\"btn btn-primary\\\"\\r\\n      type=\\\"submit\\\"\\r\\n      [disabled]=\\\"changePasswordForm.invalid\\\"\\r\\n    >\\r\\n      Save changes\\r\\n    </button>\\r\\n    <button class=\\\"btn\\\" type=\\\"button\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\r\\n  </form>\\r\\n</ng-container>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvY29udGFpbmVycy9jaGFuZ2UtcGFzc3dvcmQvY2hhbmdlLXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n  FormBuilder,\r\n} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { UsersService } from '../../services/users.service';\r\nimport { SessionService } from '../../../core/auth/services/session.service';\r\nimport { User } from 'src/app/shared/models/auth/user';\r\nimport { MatchValidator } from 'src/app/shared/validators/match.validator';\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.scss'],\r\n})\r\nexport class ChangePasswordComponent implements OnInit, OnDestroy {\r\n  destroy$: Subject<boolean> = new Subject<boolean>();\r\n  user: User;\r\n  changePasswordForm: FormGroup;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private session: SessionService,\r\n    private router: Router,\r\n    private userService: UsersService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.session\r\n      .getUser()\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(user => {\r\n        this.changePasswordForm = this.fb.group(\r\n          {\r\n            id: user.id,\r\n            newPassword: ['', [Validators.required, Validators.minLength(8)]],\r\n            confirmedPassword: ['', [Validators.required]],\r\n          },\r\n          {\r\n            validator: MatchValidator('newPassword', 'confirmedPassword'),\r\n          }\r\n        );\r\n        this.user = user;\r\n      });\r\n  }\r\n\r\n  onChangePassword() {\r\n    this.userService\r\n      .updateUserPassword(this.changePasswordForm.value)\r\n      .subscribe(() => {\r\n        this.router.navigate(['account']);\r\n      });\r\n  }\r\n\r\n  onCancel() {\r\n    this.router.navigate(['account']);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next(true);\r\n    this.destroy$.unsubscribe();\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"clr-row\\\">\\r\\n  <div class=\\\"clr-col-12\\\"><h1>Update personnal information</h1></div>\\r\\n</div>\\r\\n<ng-container *ngIf=\\\"user\\\">\\r\\n  <form [formGroup]=\\\"editProfileForm\\\" (ngSubmit)=\\\"onEditProfile()\\\" clrForm>\\r\\n    <input clrInput type=\\\"hidden\\\" formControlName=\\\"id\\\" name=\\\"id\\\" id=\\\"id\\\" />\\r\\n    <clr-input-container>\\r\\n      <label>Username</label>\\r\\n      <input\\r\\n        clrInput\\r\\n        type=\\\"text\\\"\\r\\n        formControlName=\\\"username\\\"\\r\\n        name=\\\"Username\\\"\\r\\n        id=\\\"username\\\"\\r\\n      />\\r\\n      <clr-control-error>\\r\\n        <div *clrIfError=\\\"'required'\\\">\\r\\n          Username is required.\\r\\n        </div></clr-control-error\\r\\n      >\\r\\n    </clr-input-container>\\r\\n    <clr-input-container>\\r\\n      <label>Email</label>\\r\\n      <input\\r\\n        clrInput\\r\\n        type=\\\"text\\\"\\r\\n        formControlName=\\\"email\\\"\\r\\n        name=\\\"Email\\\"\\r\\n        id=\\\"email\\\"\\r\\n      />\\r\\n      <clr-control-error>\\r\\n        <div *clrIfError=\\\"'required'\\\">\\r\\n          Email is required.\\r\\n        </div>\\r\\n        <div *clrIfError=\\\"'email'\\\">\\r\\n          Incorrect Email.\\r\\n        </div></clr-control-error\\r\\n      >\\r\\n    </clr-input-container>\\r\\n    <button\\r\\n      class=\\\"btn btn-primary\\\"\\r\\n      type=\\\"submit\\\"\\r\\n      [disabled]=\\\"editProfileForm.invalid\\\"\\r\\n    >\\r\\n      Save changes\\r\\n    </button>\\r\\n    <button class=\\\"btn\\\" type=\\\"button\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\r\\n  </form>\\r\\n</ng-container>\\r\\n\"","module.exports = \"#username,\\n#email {\\n  width: 220px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWNjb3VudC9jb250YWluZXJzL2VkaXQtcHJvZmlsZS9EOlxcRGV2ZWxvcHBlbWVudFxcZ2l2ZW1lXFxjbGllbnQvc3JjXFxhcHBcXGFjY291bnRcXGNvbnRhaW5lcnNcXGVkaXQtcHJvZmlsZVxcZWRpdC1wcm9maWxlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztFQUVFLFlBQVksRUFBQSIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvY29udGFpbmVycy9lZGl0LXByb2ZpbGUvZWRpdC1wcm9maWxlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI3VzZXJuYW1lLFxyXG4jZW1haWwge1xyXG4gIHdpZHRoOiAyMjBweDtcclxufVxyXG4iXX0= */\"","import { UsersService } from './../../services/users.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { User } from 'src/app/shared/models/auth/user';\r\nimport { SessionService } from 'src/app/core/auth/services/session.service';\r\nimport { takeUntil, switchMap } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-edit-profile',\r\n  templateUrl: './edit-profile.component.html',\r\n  styleUrls: ['./edit-profile.component.scss'],\r\n})\r\nexport class EditProfileComponent implements OnInit, OnDestroy {\r\n  destroy$: Subject<boolean> = new Subject<boolean>();\r\n  user: User;\r\n  editProfileForm: FormGroup;\r\n\r\n  constructor(\r\n    private session: SessionService,\r\n    private router: Router,\r\n    private userService: UsersService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.session\r\n      .getUser()\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(user => {\r\n        this.editProfileForm = new FormGroup({\r\n          id: new FormControl(user.id),\r\n          email: new FormControl(user.email, [\r\n            Validators.required,\r\n            Validators.email,\r\n          ]),\r\n          username: new FormControl(user.username, [Validators.required]),\r\n        });\r\n        this.user = user;\r\n      });\r\n  }\r\n\r\n  onEditProfile() {\r\n    if (this.editProfileForm.valid) {\r\n      this.userService.updateUser(this.editProfileForm.value).subscribe(() => {\r\n        this.router.navigate(['account']);\r\n      });\r\n    }\r\n  }\r\n\r\n  onCancel() {\r\n    this.router.navigate(['account']);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next(true);\r\n    this.destroy$.unsubscribe();\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"clr-row\\\">\\r\\n  <div class=\\\"clr-col-12\\\"><h1>My account</h1></div>\\r\\n</div>\\r\\n<ng-container *ngIf=\\\"user$ | async as user\\\">\\r\\n  <div class=\\\"clr-row\\\">\\r\\n    <div class=\\\"clr-col-8\\\"><h3>Personal information</h3></div>\\r\\n    <div class=\\\"clr-col-4\\\">\\r\\n      <button class=\\\"btn btn-outline\\\" routerLink=\\\"/account/edit-profile\\\">\\r\\n        Edit profile\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"clr-row\\\">\\r\\n    <div class=\\\"clr-col-4\\\">Username:</div>\\r\\n    <div class=\\\"clr-col\\\">{{ user.username }}</div>\\r\\n  </div>\\r\\n  <div class=\\\"clr-row\\\">\\r\\n    <div class=\\\"clr-col-4\\\">Email:</div>\\r\\n    <div class=\\\"clr-col\\\">{{ user.email }}</div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"clr-row\\\">\\r\\n    <div class=\\\"clr-col-8\\\"><h3>Password</h3></div>\\r\\n    <div class=\\\"clr-col-4\\\">\\r\\n      <button class=\\\"btn btn-outline\\\" routerLink=\\\"/account/change-password\\\">\\r\\n        Change password\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"clr-row\\\">\\r\\n    <div class=\\\"clr-col-4\\\">Password:</div>\\r\\n    <div class=\\\"clr-col\\\">*********</div>\\r\\n  </div>\\r\\n</ng-container>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvY29udGFpbmVycy9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { SessionService } from 'src/app/core/auth/services/session.service';\r\nimport { User } from 'src/app/shared/models/auth/user';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss'],\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  user$: Observable<User>;\r\n  constructor(private session: SessionService) {}\r\n\r\n  ngOnInit() {\r\n    this.user$ = this.session.getUser();\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"clr-row\\\">\\r\\n  <div class=\\\"clr-col-12\\\"><h1>Create an account</h1></div>\\r\\n</div>\\r\\n<form [formGroup]=\\\"signupForm\\\" (ngSubmit)=\\\"onSignup()\\\" clrForm>\\r\\n  <clr-input-container>\\r\\n    <label>Username</label>\\r\\n    <input\\r\\n      clrInput\\r\\n      type=\\\"text\\\"\\r\\n      formControlName=\\\"username\\\"\\r\\n      name=\\\"Username\\\"\\r\\n      id=\\\"username\\\"\\r\\n    />\\r\\n    <clr-control-error>\\r\\n      <div *clrIfError=\\\"'required'\\\">\\r\\n        Username is required.\\r\\n      </div></clr-control-error\\r\\n    >\\r\\n  </clr-input-container>\\r\\n  <clr-input-container>\\r\\n    <label>Email</label>\\r\\n    <input\\r\\n      clrInput\\r\\n      type=\\\"text\\\"\\r\\n      formControlName=\\\"email\\\"\\r\\n      name=\\\"Email\\\"\\r\\n      id=\\\"email\\\"\\r\\n    />\\r\\n    <clr-control-error>\\r\\n      <div *clrIfError=\\\"'required'\\\">\\r\\n        Email is required.\\r\\n      </div>\\r\\n      <div *clrIfError=\\\"'email'\\\">\\r\\n        Incorrect Email.\\r\\n      </div></clr-control-error\\r\\n    >\\r\\n  </clr-input-container>\\r\\n  <clr-password-container>\\r\\n    <label>Password</label>\\r\\n    <input\\r\\n      clrPassword\\r\\n      type=\\\"text\\\"\\r\\n      formControlName=\\\"password\\\"\\r\\n      name=\\\"password\\\"\\r\\n      id=\\\"password\\\"\\r\\n    />\\r\\n    <clr-control-error>\\r\\n      <div *clrIfError=\\\"'required'\\\">\\r\\n        Password is required.\\r\\n      </div>\\r\\n      <div *clrIfError=\\\"'minlength'\\\">\\r\\n        Password must be at least 8 characters long.\\r\\n      </div></clr-control-error\\r\\n    >\\r\\n  </clr-password-container>\\r\\n  <clr-password-container>\\r\\n    <label>Confirm password</label>\\r\\n    <input\\r\\n      clrPassword\\r\\n      type=\\\"text\\\"\\r\\n      formControlName=\\\"confirmedPassword\\\"\\r\\n      name=\\\"confirmedPassword\\\"\\r\\n      id=\\\"confirmedPassword\\\"\\r\\n    />\\r\\n    <clr-control-error>\\r\\n      <div *clrIfError=\\\"'required'\\\">\\r\\n        Confirmed password is required.\\r\\n      </div>\\r\\n      <div *clrIfError=\\\"'match'\\\">\\r\\n        Passwords must match.\\r\\n      </div></clr-control-error\\r\\n    >\\r\\n  </clr-password-container>\\r\\n  <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"signupForm.invalid\\\">\\r\\n    Create account\\r\\n  </button>\\r\\n</form>\\r\\n<div>\\r\\n  Have an account? <a routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\">Sign in</a>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvY29udGFpbmVycy9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n  FormBuilder,\r\n} from '@angular/forms';\r\n\r\nimport { UsersService } from '../../services/users.service';\r\nimport { LoggerService } from 'src/app/core/logger/services/logger.service';\r\nimport { MatchValidator } from 'src/app/shared/validators/match.validator';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss'],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  signupForm: FormGroup;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private userService: UsersService,\r\n    private logger: LoggerService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.createForm();\r\n  }\r\n\r\n  onSignup() {\r\n    if (this.signupForm.valid) {\r\n      this.userService\r\n        .register(this.signupForm.value)\r\n        .subscribe(() => {}, err => this.logger.error(JSON.stringify(err)));\r\n    }\r\n  }\r\n\r\n  // TOOD : verify unicity for email/username & matched passwords\r\n  private createForm() {\r\n    this.signupForm = this.fb.group(\r\n      {\r\n        email: ['', [Validators.required, Validators.email]],\r\n        username: ['', Validators.required],\r\n        password: ['', [Validators.required, Validators.minLength(8)]],\r\n        confirmedPassword: ['', [Validators.required]],\r\n      },\r\n      {\r\n        validator: MatchValidator('password', 'confirmedPassword'),\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { switchMap, map, tap } from 'rxjs/operators';\r\n\r\nimport { AuthService } from './../../core/auth/services/auth.service';\r\nimport { ConfigService } from 'src/app/core/config/config.service';\r\nimport { LoggerService } from 'src/app/core/logger/services/logger.service';\r\nimport { SessionService } from 'src/app/core/auth/services/session.service';\r\n\r\nimport { User } from 'src/app/shared/models/auth/user';\r\nimport { UserResponse } from 'src/app/shared/models/auth/user-response';\r\nimport { Credential } from 'src/app/shared/models/auth/credential';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UsersService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private session: SessionService,\r\n    private auth: AuthService,\r\n    private config: ConfigService,\r\n    private logger: LoggerService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  /**\r\n   * Update a user and update the session\r\n   */\r\n  updateUser(user: User) {\r\n    if (user) {\r\n      return this.http\r\n        .patch(`${this.getResourceBaseUrl()}/${user.id}`, user)\r\n        .pipe(\r\n          switchMap(() =>\r\n            this.http.get<UserResponse>(`${this.getResourceBaseUrl()}/me`)\r\n          ),\r\n          map(userResponse => this.session.updateUser(new User(userResponse)))\r\n        );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Récupère les informations courantes de l'utilisateur\r\n   * puis patch le password.\r\n   * @param info les informations de modification de password (id:userid)\r\n   */\r\n  updateUserPassword(info: {\r\n    id: number;\r\n    newPassword: string;\r\n    confirmedPassword: string;\r\n  }) {\r\n    if (info.newPassword !== info.confirmedPassword) {\r\n      throw new Error('Passwords missmatched');\r\n    }\r\n    return this.http.get<UserResponse>(`${this.getResourceBaseUrl()}/me`).pipe(\r\n      map(user => {\r\n        const newUser = new User(user);\r\n        newUser.password = info.newPassword;\r\n        return newUser;\r\n      }),\r\n      switchMap(user =>\r\n        this.http.patch(`${this.getResourceBaseUrl()}/${user.id}`, user)\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * créer l'utilisateur puis s'authentifie.\r\n   * L'utilisateur est ensuite redirigé sur la page post login.\r\n   */\r\n  register(user: User) {\r\n    if (user.password !== user.confirmedPassword) {\r\n      throw new Error('Passwords missmatched');\r\n    }\r\n    delete user.confirmedPassword;\r\n    return this.http.post(this.getResourceBaseUrl(), user).pipe(\r\n      switchMap(() =>\r\n        this.auth.signIn(\r\n          new Credential({ email: user.email, password: user.password })\r\n        )\r\n      ),\r\n      tap(() => this.logger.info('Register and login success!')),\r\n      map(() => this.router.navigate(this.config.getPostLoginDefaultRoute()))\r\n    );\r\n  }\r\n\r\n  private getResourceBaseUrl() {\r\n    return `${this.config.getApiBaseUrl()}users`;\r\n  }\r\n}\r\n","import { FormGroup } from '@angular/forms';\r\n\r\nexport function MatchValidator(\r\n  controlName: string,\r\n  matchingControlName: string\r\n) {\r\n  return (formGroup: FormGroup) => {\r\n    const control = formGroup.controls[controlName];\r\n    const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n    if (matchingControl.errors && !matchingControl.errors.match) {\r\n      // return if another validator has already found an error on the matchingControl\r\n      return;\r\n    }\r\n\r\n    // set error on matchingControl if validation fails\r\n    if (control.value !== matchingControl.value) {\r\n      matchingControl.setErrors({ match: true });\r\n    } else {\r\n      matchingControl.setErrors(null);\r\n    }\r\n  };\r\n}\r\n"],"sourceRoot":""}