{"version":3,"sources":["webpack:///./src/app/account/account-routing.module.ts","webpack:///./src/app/account/account.module.ts","webpack:///./src/app/account/containers/change-password/change-password.component.html","webpack:///./src/app/account/containers/change-password/change-password.component.scss","webpack:///./src/app/account/containers/change-password/change-password.component.ts","webpack:///./src/app/account/containers/edit-profile/edit-profile.component.html","webpack:///./src/app/account/containers/edit-profile/edit-profile.component.scss","webpack:///./src/app/account/containers/edit-profile/edit-profile.component.ts","webpack:///./src/app/account/containers/profile/profile.component.html","webpack:///./src/app/account/containers/profile/profile.component.scss","webpack:///./src/app/account/containers/profile/profile.component.ts","webpack:///./src/app/account/containers/register/register.component.html","webpack:///./src/app/account/containers/register/register.component.scss","webpack:///./src/app/account/containers/register/register.component.ts","webpack:///./src/app/account/services/users.service.ts"],"names":[],"mappings":"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","file":"account-account-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IsUserUnknownGuard } from '../core/auth/guards/is-user-unknown.guard';\nimport { IsUserSignedInGuardGuard } from '../core/auth/guards/is-user-signed-in-guard.guard';\nimport { ProfileComponent } from './containers/profile/profile.component';\nimport { RegisterComponent } from './containers/register/register.component';\nimport { EditProfileComponent } from './containers/edit-profile/edit-profile.component';\nimport { ChangePasswordComponent } from './containers/change-password/change-password.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'profile',\n    pathMatch: 'full',\n  },\n  {\n    path: 'register',\n    canActivate: [IsUserUnknownGuard],\n    component: RegisterComponent,\n  },\n  {\n    path: 'profile',\n    canActivate: [IsUserSignedInGuardGuard],\n    component: ProfileComponent,\n  },\n  {\n    path: 'edit-profile',\n    canActivate: [IsUserSignedInGuardGuard],\n    component: EditProfileComponent,\n  },\n  {\n    path: 'change-password',\n    canActivate: [IsUserSignedInGuardGuard],\n    component: ChangePasswordComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AccountRoutingModule {}\n","import { NgModule } from '@angular/core';\n\nimport { AccountRoutingModule } from './account-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { RegisterComponent } from './containers/register/register.component';\nimport { ProfileComponent } from './containers/profile/profile.component';\nimport { EditProfileComponent } from './containers/edit-profile/edit-profile.component';\nimport { ChangePasswordComponent } from './containers/change-password/change-password.component';\n\n@NgModule({\n  declarations: [\n    RegisterComponent,\n    ProfileComponent,\n    EditProfileComponent,\n    ChangePasswordComponent,\n  ],\n  imports: [SharedModule, AccountRoutingModule],\n})\nexport class AccountModule {}\n","module.exports = \"<div class=\\\"clr-row\\\">\\n  <div class=\\\"clr-col-12\\\"><h1>Change password</h1></div>\\n</div>\\n<ng-container *ngIf=\\\"user\\\">\\n  <form\\n    [formGroup]=\\\"changePasswordForm\\\"\\n    (ngSubmit)=\\\"onChangePassword()\\\"\\n    clrForm\\n  >\\n    <input clrInput type=\\\"hidden\\\" formControlName=\\\"id\\\" name=\\\"id\\\" id=\\\"id\\\" />\\n    <clr-password-container>\\n      <label>New password</label>\\n      <input\\n        clrPassword\\n        type=\\\"text\\\"\\n        formControlName=\\\"newPassword\\\"\\n        name=\\\"newPassword\\\"\\n        id=\\\"newPassword\\\"\\n      />\\n    </clr-password-container>\\n    <clr-password-container>\\n      <label>Confirm password</label>\\n      <input\\n        clrPassword\\n        type=\\\"text\\\"\\n        formControlName=\\\"confirmedPassword\\\"\\n        name=\\\"confirmedPassword\\\"\\n        id=\\\"confirmedPassword\\\"\\n      />\\n    </clr-password-container>\\n    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\n    <button class=\\\"btn\\\" type=\\\"button\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\n  </form>\\n</ng-container>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvY29udGFpbmVycy9jaGFuZ2UtcGFzc3dvcmQvY2hhbmdlLXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { UsersService } from '../../services/users.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { SessionService } from 'src/app/core/auth/services/session.service';\nimport { User } from 'src/app/shared/models/auth/user';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss'],\n})\nexport class ChangePasswordComponent implements OnInit, OnDestroy {\n  destroy$: Subject<boolean> = new Subject<boolean>();\n  user: User;\n  changePasswordForm: FormGroup;\n\n  constructor(\n    private session: SessionService,\n    private router: Router,\n    private userService: UsersService\n  ) {}\n\n  ngOnInit() {\n    this.session\n      .getUser()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(user => {\n        this.changePasswordForm = new FormGroup({\n          id: new FormControl(user.id),\n          newPassword: new FormControl(),\n          confirmedPassword: new FormControl(),\n        });\n        this.user = user;\n      });\n  }\n\n  onChangePassword() {\n    this.userService\n      .updateUserPassword(this.changePasswordForm.value)\n      .subscribe(() => {\n        this.router.navigate(['account']);\n      });\n  }\n\n  onCancel() {\n    this.router.navigate(['account']);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n","module.exports = \"<div class=\\\"clr-row\\\">\\n  <div class=\\\"clr-col-12\\\"><h1>Update personnal information</h1></div>\\n</div>\\n<ng-container *ngIf=\\\"user\\\">\\n  <form [formGroup]=\\\"editProfileForm\\\" (ngSubmit)=\\\"onEditProfile()\\\" clrForm>\\n    <input clrInput type=\\\"hidden\\\" formControlName=\\\"id\\\" name=\\\"id\\\" id=\\\"id\\\" />\\n    <clr-input-container>\\n      <label>Username</label>\\n      <input\\n        clrInput\\n        type=\\\"text\\\"\\n        formControlName=\\\"username\\\"\\n        name=\\\"Username\\\"\\n        id=\\\"username\\\"\\n      />\\n    </clr-input-container>\\n    <clr-input-container>\\n      <label>Email</label>\\n      <input\\n        clrInput\\n        type=\\\"text\\\"\\n        formControlName=\\\"email\\\"\\n        name=\\\"Email\\\"\\n        id=\\\"email\\\"\\n      />\\n    </clr-input-container>\\n    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\n    <button class=\\\"btn\\\" type=\\\"button\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\n  </form>\\n</ng-container>\\n\"","module.exports = \"#username,\\n#email {\\n  width: 220px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWNjb3VudC9jb250YWluZXJzL2VkaXQtcHJvZmlsZS9DOlxcZGV2XFxnaXZlbWVcXGNsaWVudC9zcmNcXGFwcFxcYWNjb3VudFxcY29udGFpbmVyc1xcZWRpdC1wcm9maWxlXFxlZGl0LXByb2ZpbGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0VBRUUsWUFBWSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvYWNjb3VudC9jb250YWluZXJzL2VkaXQtcHJvZmlsZS9lZGl0LXByb2ZpbGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjdXNlcm5hbWUsXHJcbiNlbWFpbCB7XHJcbiAgd2lkdGg6IDIyMHB4O1xyXG59XHJcbiJdfQ== */\"","import { UsersService } from './../../services/users.service';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { User } from 'src/app/shared/models/auth/user';\nimport { SessionService } from 'src/app/core/auth/services/session.service';\nimport { takeUntil, switchMap } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.scss'],\n})\nexport class EditProfileComponent implements OnInit, OnDestroy {\n  destroy$: Subject<boolean> = new Subject<boolean>();\n  user: User;\n  editProfileForm: FormGroup;\n\n  constructor(\n    private session: SessionService,\n    private router: Router,\n    private userService: UsersService\n  ) {}\n\n  ngOnInit() {\n    this.session\n      .getUser()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(user => {\n        this.editProfileForm = new FormGroup({\n          id: new FormControl(user.id),\n          email: new FormControl(user.email),\n          username: new FormControl(user.username),\n        });\n        this.user = user;\n      });\n  }\n\n  onEditProfile() {\n    this.userService.updateUser(this.editProfileForm.value).subscribe(() => {\n      this.router.navigate(['account']);\n    });\n  }\n\n  onCancel() {\n    this.router.navigate(['account']);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n","module.exports = \"<div class=\\\"clr-row\\\">\\n  <div class=\\\"clr-col-12\\\"><h1>My account</h1></div>\\n</div>\\n<ng-container *ngIf=\\\"user$ | async as user\\\">\\n  <div class=\\\"clr-row\\\">\\n    <div class=\\\"clr-col-8\\\"><h3>Personal information</h3></div>\\n    <div class=\\\"clr-col-4\\\">\\n      <button class=\\\"btn btn-outline\\\" routerLink=\\\"/account/edit-profile\\\">\\n        Edit profile\\n      </button>\\n    </div>\\n  </div>\\n  <div class=\\\"clr-row\\\">\\n    <div class=\\\"clr-col-4\\\">Username:</div>\\n    <div class=\\\"clr-col\\\">{{ user.username }}</div>\\n  </div>\\n  <div class=\\\"clr-row\\\">\\n    <div class=\\\"clr-col-4\\\">Email:</div>\\n    <div class=\\\"clr-col\\\">{{ user.email }}</div>\\n  </div>\\n\\n  <div class=\\\"clr-row\\\">\\n    <div class=\\\"clr-col-8\\\"><h3>Password</h3></div>\\n    <div class=\\\"clr-col-4\\\">\\n      <button class=\\\"btn btn-outline\\\" routerLink=\\\"/account/change-password\\\">\\n        Change password\\n      </button>\\n    </div>\\n  </div>\\n  <div class=\\\"clr-row\\\">\\n    <div class=\\\"clr-col-4\\\">Password:</div>\\n    <div class=\\\"clr-col\\\">*********</div>\\n  </div>\\n</ng-container>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvY29udGFpbmVycy9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { SessionService } from 'src/app/core/auth/services/session.service';\nimport { User } from 'src/app/shared/models/auth/user';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss'],\n})\nexport class ProfileComponent implements OnInit {\n  user$: Observable<User>;\n  constructor(private session: SessionService) {}\n\n  ngOnInit() {\n    this.user$ = this.session.getUser();\n  }\n}\n","module.exports = \"<div class=\\\"clr-row\\\">\\n  <div class=\\\"clr-col-12\\\"><h1>Create an account</h1></div>\\n</div>\\n<form [formGroup]=\\\"signupForm\\\" (ngSubmit)=\\\"onSignup()\\\" clrForm>\\n  <clr-input-container>\\n    <label>Username</label>\\n    <input\\n      clrInput\\n      type=\\\"text\\\"\\n      formControlName=\\\"username\\\"\\n      name=\\\"Username\\\"\\n      id=\\\"username\\\"\\n    />\\n  </clr-input-container>\\n  <clr-input-container>\\n    <label>Email</label>\\n    <input\\n      clrInput\\n      type=\\\"text\\\"\\n      formControlName=\\\"email\\\"\\n      name=\\\"Email\\\"\\n      id=\\\"email\\\"\\n    />\\n  </clr-input-container>\\n  <clr-password-container>\\n    <label>Password</label>\\n    <input\\n      clrPassword\\n      type=\\\"text\\\"\\n      formControlName=\\\"password\\\"\\n      name=\\\"password\\\"\\n      id=\\\"password\\\"\\n    />\\n  </clr-password-container>\\n  <clr-password-container>\\n    <label>Confirm password</label>\\n    <input\\n      clrPassword\\n      type=\\\"text\\\"\\n      formControlName=\\\"confirmedPassword\\\"\\n      name=\\\"confirmedPassword\\\"\\n      id=\\\"confirmedPassword\\\"\\n    />\\n  </clr-password-container>\\n  <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Create account</button>\\n</form>\\n<div>\\n  Have an account? <a routerLink=\\\"login\\\" routerLinkActive=\\\"active\\\">Sign in</a>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvY29udGFpbmVycy9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { UsersService } from '../../services/users.service';\nimport { ConfigService } from './../../../core/config/config.service';\nimport { LoggerService } from 'src/app/core/logger/services/logger.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit {\n  signupForm: FormGroup;\n  constructor(\n    private userService: UsersService,\n    private config: ConfigService,\n    private logger: LoggerService,\n    private router: Router\n  ) {\n    this.signupForm = new FormGroup({\n      email: new FormControl(),\n      username: new FormControl(),\n      password: new FormControl(),\n      confirmedPassword: new FormControl(),\n    });\n  }\n\n  ngOnInit() {}\n\n  onSignup() {\n    this.userService.addUser(this.signupForm.value).subscribe(\n      () => {\n        this.logger.info('Register and login success!');\n        this.router.navigate(this.config.getPostLoginDefaultRoute());\n      },\n      err =>\n        /*this.messageService.add({ severity: 'error', summary: 'Login error' }*/\n        this.logger.error(err)\n    );\n  }\n}\n","import { AuthService } from './../../core/auth/services/auth.service';\nimport { ConfigService } from 'src/app/core/config/config.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { switchMap, map } from 'rxjs/operators';\n\nimport { User } from 'src/app/shared/models/auth/user';\nimport { UserResponse } from 'src/app/shared/models/auth/user-response';\nimport { SessionService } from 'src/app/core/auth/services/session.service';\nimport { Credential } from 'src/app/shared/models/auth/credential';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UsersService {\n  constructor(\n    private http: HttpClient,\n    private session: SessionService,\n    private auth: AuthService,\n    private config: ConfigService\n  ) {}\n\n  /**\n   * Update a user and update the session\n   */\n  updateUser(user: User) {\n    if (user) {\n      return this.http\n        .patch(`${this.getResourceBaseUrl()}/${user.id}`, user)\n        .pipe(\n          switchMap(() =>\n            this.http.get<UserResponse>(`${this.getResourceBaseUrl()}/me`)\n          ),\n          map(userResponse => this.session.updateUser(new User(userResponse)))\n        );\n    }\n  }\n\n  updateUserPassword(info: {\n    id: number;\n    newPassword: string;\n    confirmedPassword: string;\n  }) {\n    if (info.newPassword !== info.confirmedPassword) {\n      throw new Error('Passwords missmatched');\n    }\n    return this.http.get<UserResponse>(`${this.getResourceBaseUrl()}/me`).pipe(\n      map(user => {\n        const newUser = new User(user);\n        newUser.password = info.newPassword;\n        return newUser;\n      }),\n      switchMap(user =>\n        this.http.patch(`${this.getResourceBaseUrl()}/${user.id}`, user)\n      )\n    );\n  }\n\n  addUser(user: User) {\n    if (user.password !== user.confirmedPassword) {\n      throw new Error('Passwords missmatched');\n    }\n    delete user.confirmedPassword;\n    return this.http\n      .post(this.getResourceBaseUrl(), user)\n      .pipe(\n        switchMap(() =>\n          this.auth.signIn(\n            new Credential({ email: user.email, password: user.password })\n          )\n        )\n      );\n  }\n\n  private getResourceBaseUrl() {\n    return `${this.config.getApiBaseUrl()}users`;\n  }\n}\n"],"sourceRoot":""}